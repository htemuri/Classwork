library(readr)
banknote <- read_csv("banknote.csv")
View(banknote)
df <- banknote
knitr::opts_chunk$set(echo = TRUE)
library(mlbench)
library(caret)
library(tidyverse)
# import data
data("PimaIndiansDiabetes2")
df<- PimaIndiansDiabetes2
# remove NA data points
df <- na.omit(df)
set.seed(123)
set.seed(123)
training <- df$diabetes %>%
createDataPartition(p=0.8, list = FALSE)
training <- df$class %>%
createDataPartition(p=0.8, list = FALSE)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(mlbench)
library(caret)
library(tidyverse)
# import data
banknote <- read_csv("banknote.csv")
df<- banknote
# remove NA data points
df <- na.omit(df)
# Predictions
probabilities <- model %>% predict(testData, type="response")
rm(PimaIndiansDiabetes2)
library(readr)
library(mlbench)
library(caret)
library(tidyverse)
# import data
banknote <- read_csv("banknote.csv")
df<- banknote
# remove NA data points
df <- na.omit(df)
set.seed(123)
training <- df$class %>%
createDataPartition(p=0.8, list = FALSE)
trainData <- df[training, ]
testData <- df[-training, ]
trainData <- df[training, ]
testData <- df[-training, ]
model <- glm(class ~ ., data=trainData, family = binomial)
summary(model)
df$class <- as.factor(df$class)
model <- glm(class ~ ., data=trainData, family = binomial)
summary(model)
# Predictions
probabilities <- model %>% predict(testData, type="response")
predictedClasses <- ifelse(probabilities > 0.5, "1", "0")
# Prediction accuracy
mean(predictedClasses == testData$class)
# Prediction error
mean(predictedClasses != testData$class)
# Confusion matrix
cm <- confusionMatrix(factor(predictedClasses), testData$class, positive = "1")
# Confusion matrix
cm <- confusionMatrix(factor(predictedClasses), factor(testData$class), positive = "1")
cm
step <- stepAIC(model, trace=FALSE)
library(MASS)
step <- stepAIC(model, trace=FALSE)
step$anova
step <- stepAIC(model, trace="0")
step <- stepAIC(model, trace=0)
step$anova
summary(model)
BIC<-stepAIC(model,k=log(nrow(df)))
step$bic
BIC$anova
knitr::opts_chunk$set(echo = TRUE)
library(readr)
library(mlbench)
library(caret)
library(tidyverse)
library(MASS)
library(leaps)
library(bestglm)
install.packages("bestglm")
BIC$coefficients
bestSubset <- bestglm(df, IC="BIC", family=binomial)
bestSubset <- bestglm::bestglm(df, IC="BIC", family=binomial)
df$class <- as.numeric(df$class)
View(df)
df$class <- factor(df$class)
df <- banknote
bestSubset <- bestglm::bestglm(df, IC="BIC", family=binomial)
View(df)
dummy <- data.frame(df)
bestSubset <- bestglm::bestglm(dummy, IC="BIC", family=binomial)
bestSubset
bestSubset$BestModels
bestSubset$ModelReport
bestSubset$Bestq
bestSubset
bestSubset$BIC
summary(bestSubset)
bestSubset$BestModel
