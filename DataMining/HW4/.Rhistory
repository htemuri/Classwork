library(readr)
crop_data <- read_csv("crop.data.csv")
View(crop_data)
library(readr)
income_data <- read_csv("income.data.csv")
View(income_data)
install.packages(c("BH", "cli", "cpp11", "crayon", "desc", "dplyr", "fansi", "farver", "hms", "isoband", "lifecycle", "pillar", "pkgload", "ps", "Rcpp", "tibble", "tinytex", "vctrs", "waldo"))
install.packages(c("BH", "cli", "cpp11", "crayon", "desc", "dplyr", "fansi", "farver", "hms", "isoband", "lifecycle", "pillar", "pkgload", "ps", "Rcpp", "tibble", "tinytex", "vctrs", "waldo"))
install.packages(c("BH", "cli", "cpp11", "crayon", "desc", "dplyr", "fansi", "farver", "hms", "isoband", "lifecycle", "pillar", "pkgload", "ps", "Rcpp", "tibble", "tinytex", "vctrs", "waldo"))
# Normality Test of variables
shapiro.test(heart_data$heart.disease)
# Loading required packages
library(ggplot2)
library(dplyr)
library(readr)
# Creating df of text data
heart_data <- read_csv("heart_data.csv")
# 1.1 Finding Least squares regression line
lin_fit <- lm(heart.disease ~ biking, data=heart_data)
summary(lin_fit)
# Creating df of text data
heart_data <- read_csv("heart_data.csv")
# Creating df of text data
income_data <- read_csv("income.data.csv")
# 1.1 Finding Least squares regression line
lin_fit <- lm(happiness ~ income, data=income_data)
summary(lin_fit)
# 1.2 Plotting Linear Fit
ggplot(data = income_data, aes(x=income, y=happiness)) + geom_point() + stat_smooth(method = lm)
# 1.3 Testing linear relationship along with assumptions
# Normality Test of residuals
shapiro.test(lin_fit$residuals)
plot(lin_fit)
View(crop_data)
shapiro.test(crop_data$yield)
plot(crop_data$yield)
